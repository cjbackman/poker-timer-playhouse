
// List of audio files for different events
const AUDIO_FILES = {
  blindChange: '/blind-change.mp3',
  buttonClick: '/button-click.mp3',
  success: '/success.mp3',
  error: '/error.mp3',
  timerEnd: '/timer-end.mp3',
  notification: '/notification.mp3',
};

// Base64 encoded audio files for immediate use without external files
const BASE64_AUDIO = {
  blindChange: 'data:audio/mp3;base64,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',
  buttonClick: 'data:audio/mp3;base64,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',
  notification: 'data:audio/mp3;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4LjI5LjEwMAAAAAAAAAAAAAAA//tQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWGluZwAAAA8AAAATAAAiPQA4OERETk5YWGJibW13d4GBi4uVlaCgqqq0tL6+yMjS0t3d5+fx8fv7//8AAAAATGF2ZgjEWDEMwAAeBntvIZmCBD9jT26Z4AAILCrl0ZoAMAQIAAcDcXBpq1N5Jj+GHICgWRU/Mtz77U+AAAAAABgZUVOKY3E3LYzzZ0LmxH6BoZCK3q1V/8c0AAAAAAIvPzqIwwIIFFSfM4xOYXSkP19qVn85+3QjXAAAAAAMJMJQVMVYUCdg8zGAgIpOtmxeGLXNvZf0IAFAA/A2G9qNQ4sBM1oRv8M6kXJoTn+kDPrPAAEmptNzjGSRMOUwCMDQyJi08HXKyA87XdVYUvdv5PxZqTddqTcpNCb1Qm8zHwgqCL49Iw2AEKjL2nGgJON7u3/+v/9f+pYeYnBXh32cU4KoAGcYr7R//7UGQbgAXQXGj/dwAAAAvrPye4AAOIJeyfUmAAgEi9s+pMABpJHGLUzVNIpCEIRCqqqqqpGqqqqqqqqqqqqpJJBYRECUqoQQQUTwRo0YIFCpRnXSsImNZr0p/6FH/8dLpCw2BQBAAGKNI3eqcKxzJxJMFvF8tz/i8mpcBYGLuDIcREMBYhwdGBqAQgMhZqhjjw2LDGOCpYZogVmrYqTDSwcRxCCcmcE7XLnWerCsQA0gSG1QlDEZmYLLLn1hzDEckUxJ4y/8jqzKLThFnlRGpLqFPqZylI00MHJpJN1tPLf+W/+F9y2//0V+f/mG5PEAGHf+eV//1/5ZBghS+UQAAAAADEYjEYiEMj//tSZBAP9Gw/2/s9wHI8QVs8Y7gASiU/Y6z2QekiHus5juABoYjEYjEYjEYjEYjEbFiEMRiMRiMRiMRiMQwGAwGJKSkpKT5KSkpKSkpKDNSSkpKSkpKSkpKDMYjEYQ0SkpKSkpKSkpKSgxIYRiMRiIRiMRiMRiMRiMf///////////////////////ETEFNRTMuOTkuNVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVUxBTUUzLjk5LjVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV//7UmQRj/AAADTAAAAAAAAANAAAAAAAANIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==',
};

// Audio context for more control over audio playback
let audioContext: AudioContext | null = null;
let audioBuffers: { [key: string]: AudioBuffer } = {};

// Try to initialize audio context (might be blocked by browsers until user interaction)
const initializeAudioContext = (): void => {
  try {
    if (!audioContext && typeof window !== 'undefined') {
      const AudioContext = window.AudioContext || (window as any).webkitAudioContext;
      if (AudioContext) {
        audioContext = new AudioContext();
      }
    }
  } catch (e) {
    console.error('Failed to initialize audio context:', e);
  }
};

// Load an audio buffer from a Base64 encoded string
const loadAudioBuffer = async (key: keyof typeof BASE64_AUDIO): Promise<AudioBuffer | null> => {
  if (!audioContext) return null;
  
  try {
    if (audioBuffers[key]) return audioBuffers[key];
    
    const response = await fetch(BASE64_AUDIO[key]);
    const arrayBuffer = await response.arrayBuffer();
    const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);
    audioBuffers[key] = audioBuffer;
    return audioBuffer;
  } catch (e) {
    console.error('Failed to load audio buffer:', e);
    return null;
  }
};

// Play a sound with the Web Audio API for better control
const playSound = async (key: keyof typeof BASE64_AUDIO, volume = 1.0): Promise<void> => {
  if (!audioContext) {
    initializeAudioContext();
    if (!audioContext) {
      fallbackPlaySound(key);
      return;
    }
  }

  try {
    // Resume audio context if suspended (browser policy)
    if (audioContext.state === 'suspended') {
      await audioContext.resume();
    }
    
    const buffer = await loadAudioBuffer(key);
    if (!buffer) {
      fallbackPlaySound(key);
      return;
    }
    
    const source = audioContext.createBufferSource();
    source.buffer = buffer;
    
    const gainNode = audioContext.createGain();
    gainNode.gain.value = volume;
    
    source.connect(gainNode);
    gainNode.connect(audioContext.destination);
    
    source.start(0);
  } catch (e) {
    console.error('Failed to play sound:', e);
    fallbackPlaySound(key);
  }
};

// Fallback to basic Audio API if Web Audio API fails
const fallbackPlaySound = (key: keyof typeof BASE64_AUDIO): void => {
  try {
    const audio = new Audio(BASE64_AUDIO[key]);
    audio.play().catch(e => console.error('Failed to play fallback sound:', e));
  } catch (e) {
    console.error('Failed to play fallback sound:', e);
  }
};

// Exported functions for different sound effects
export const playBlindChangeSound = (volume = 1.0) => playSound('blindChange', volume);
export const playButtonClickSound = (volume = 0.5) => playSound('buttonClick', volume);
export const playSuccessSound = (volume = 0.8) => playSound('success', volume);
export const playErrorSound = (volume = 0.8) => playSound('error', volume);
export const playTimerEndSound = (volume = 1.0) => playSound('timerEnd', volume);
export const playNotificationSound = (volume = 0.8) => playSound('notification', volume);

// Initialize audio context on module load (will be activated on first user interaction)
if (typeof window !== 'undefined') {
  window.addEventListener('click', initializeAudioContext, { once: true });
  window.addEventListener('touchstart', initializeAudioContext, { once: true });
}
